theme_bw(aspect.ratio=1)
ggplot(data = NULL, aes(x=soc_total/10, y=soc_tha_30cm)) +
geom_point(data=uncertainty_ex_multipletrmt$montecarlo, color = "grey") +
geom_point(data=uncertainty_ex_multipletrmt$median, color="black") +
geom_abline(intercept = 0, slope = 1) +
theme_bw() +
theme(aspect.ratio=1)
ggplot(data = NULL, aes(x=soc_total/10, y=soc_tha_30cm)) +
geom_point(data=uncertainty_ex_multipletrmt$montecarlo, color = "grey") +
geom_point(data=uncertainty_ex_multipletrmt$median, color="black") +
geom_abline(intercept = 0, slope = 1) +
theme_bw() +
coord_fixed()
z <- ggplot(data = NULL, aes(x=soc_total/10, y=soc_tha_30cm)) +
geom_point(data=uncertainty_ex_multipletrmt$montecarlo, color = "grey") +
geom_point(data=uncertainty_ex_multipletrmt$median, color="black") +
geom_abline(intercept = 0, slope = 1) +
theme_bw() +
coord_fixed()
View(z)
z
ggplot(data = NULL, aes(x=soc_total/10, y=soc_tha_30cm)) +
geom_point(data=uncertainty_ex_multipletrmt$montecarlo, color = "grey") +
geom_point(data=uncertainty_ex_multipletrmt$median, color="black") +
geom_abline(intercept = 0, slope = 1) +
theme_bw() +
coord_fixed(ratio = 1, xlim = NULL, ylim = NULL, expand = TRUE)
ggplot(data = NULL, aes(x=soc_total/10, y=soc_tha_30cm)) +
geom_point(data=uncertainty_ex_multipletrmt$montecarlo, color = "grey") +
geom_point(data=uncertainty_ex_multipletrmt$median, color="black") +
geom_abline(intercept = 0, slope = 1) +
theme_bw() +
coord_fixed(ratio = 1, xlim = NULL, ylim = NULL, expand = TRUE)
ggplot(data = NULL, aes(x=soc_total/10, y=soc_tha_30cm)) +
geom_point(data=uncertainty_ex_multipletrmt$montecarlo, color = "grey") +
geom_point(data=uncertainty_ex_multipletrmt$median, color="black") +
geom_abline(intercept = 0, slope = 1) +
theme_bw() +
coord_fixed(ratio = 1, xlim = NULL, ylim = NULL, expand = TRUE, clip="off")
ggplot(data = NULL, aes(x=soc_total/10, y=soc_tha_30cm)) +
geom_point(data=uncertainty_ex_multipletrmt$montecarlo, color = "grey") +
geom_point(data=uncertainty_ex_multipletrmt$median, color="black") +
geom_abline(intercept = 0, slope = 1) +
theme_bw() +
coord_fixed(ratio = 1, xlim = c(0,200), ylim = NULL, expand = TRUE, clip="off")
ggplot(data = NULL, aes(x=soc_total/10, y=soc_tha_30cm)) +
geom_point(data=uncertainty_ex_multipletrmt$montecarlo, color = "grey") +
geom_point(data=uncertainty_ex_multipletrmt$median, color="black") +
geom_abline(intercept = 0, slope = 1) +
theme_bw() +
coord_fixed(ratio = 1, xlim = c(0,400), ylim = NULL, expand = TRUE, clip="off")
ggplot(data = NULL, aes(x=soc_total/10, y=soc_tha_30cm)) +
geom_point(data=uncertainty_ex_multipletrmt$montecarlo, color = "grey") +
geom_point(data=uncertainty_ex_multipletrmt$median, color="black") +
geom_abline(intercept = 0, slope = 1) +
theme_bw() +
coord_fixed(ratio = 1, xlim = c(0,400), ylim = c(0,400), expand = TRUE, clip="off")
ggplot(data = NULL, aes(x=soc_total/10, y=soc_tha_30cm)) +
geom_point(data=uncertainty_ex_multipletrmt$montecarlo, color = "grey") +
geom_point(data=uncertainty_ex_multipletrmt$median, color="black") +
geom_abline(intercept = 0, slope = 1) +
coord_fixed(ratio = 1, xlim = c(0,400), ylim = c(0,400), expand = TRUE, clip="off") +
theme_bw() +
```
ggplot(data = NULL, aes(x=soc_total/10, y=soc_tha_30cm)) +
geom_point(data=uncertainty_ex_multipletrmt$montecarlo, color = "grey") +
geom_point(data=uncertainty_ex_multipletrmt$median, color="black") +
geom_abline(intercept = 0, slope = 1) +
coord_fixed(ratio = 1, xlim = c(0,400), ylim = c(0,400), expand = TRUE, clip="off") +
theme_bw()
sir_ex_multipletrmt
library(ggplot2)
library(knitr)
library(dplyr)
library(geojson)
library(tibble)
library(purrr)
library(stringr)
library(here)
library(lubridate)
library(tidyr)
dir.create(tempdir()) #This fixes a bug if the temporary directory is not found
here::i_am("walkthrough_icbm.rmd")
source(here::here("r/icbm_calculate_re.r"))
source(here::here("r/icbm_run.r"))
source(here::here("r/read_climate_data.r"))
source(here::here("r/bayesian_gsa.r"))
source(here::here("r/bayesian_sir.r"))
# read SLC polygon IDs
polyids_all <- readr::read_csv(here("data/climate_data","Documentation", "SLC_PCPTREGION.csv"))
# read site data
sitedata_all <- readr::read_csv(here("data/all_experiments_dummy.csv")) %>%
left_join(polyids_all, by=c("latitude" = "Lat", "longitude" = "Long"))
sitedata_ex_onesite <- sitedata_all %>%
filter(location_name == "Ellerslie") %>%
filter(treatment_number == 7) %>%
filter(year_name <= 1985)
sitedata_ex_multipletrmt <- sitedata_all %>%
filter(year_name <= 1985) %>%
filter(location_name == "Ellerslie") %>%
group_by(treatment_name) %>%
group_split
sitedata_ex_multiplesite <- sitedata_all %>%
filter(year_name > 1990) %>%
filter(year_name < 2005) %>%
filter(team_name == "A") %>%
filter(location_name %in% c("Ellerslie", "Harrow")) %>%
group_by(location_name, treatment_name, replication_number) %>%
group_split
climate_data <- read_climate_data(climate_data_directory = here("data/climate_data","W9param_TablesCleaned"))
climate_data
head(sitedata_ex_onesite, 3)
result_ex_onesite <- run_icbm(
SiteDataTable = sitedata_ex_onesite,
DailyClimateTable = climate_data,
ag_init = 0,
bg_init = 0,
o_init = 0)
result_ex_onesite
sitedata_ex_multipletrmt[1:3] %>%
map(~head(.,3))
result_ex_multipletrmt <- sitedata_ex_multipletrmt %>%
suppressWarnings() %>%
map(function(x) {
run_icbm(
SiteDataTable = x,
DailyClimateTable = climate_data,
ag_init = 0,
bg_init = 0,
o_init = 0)
}
)
result_ex_multipletrmt[1:3] %>%
map(~head(.,3))
source(here::here("r/bayesian_uncertainty.r"))
library(ggplot2)
library(knitr)
library(dplyr)
library(geojson)
library(tibble)
library(purrr)
library(stringr)
library(here)
library(lubridate)
library(tidyr)
dir.create(tempdir()) #This fixes a bug if the temporary directory is not found
here::i_am("walkthrough_icbm.rmd")
source(here::here("r/icbm_calculate_re.r"))
source(here::here("r/icbm_run.r"))
source(here::here("r/read_climate_data.r"))
source(here::here("r/bayesian_gsa.r"))
source(here::here("r/bayesian_sir.r"))
source(here::here("r/bayesian_uncertainty.r"))
# read SLC polygon IDs
polyids_all <- readr::read_csv(here("data/climate_data","Documentation", "SLC_PCPTREGION.csv"))
# read site data
sitedata_all <- readr::read_csv(here("data/all_experiments_dummy.csv")) %>%
left_join(polyids_all, by=c("latitude" = "Lat", "longitude" = "Long"))
sitedata_ex_onesite <- sitedata_all %>%
filter(location_name == "Ellerslie") %>%
filter(treatment_number == 7) %>%
filter(year_name <= 1985)
sitedata_ex_multipletrmt <- sitedata_all %>%
filter(year_name <= 1985) %>%
filter(location_name == "Ellerslie") %>%
group_by(treatment_name) %>%
group_split
sitedata_ex_multiplesite <- sitedata_all %>%
filter(year_name > 1990) %>%
filter(year_name < 2005) %>%
filter(team_name == "A") %>%
filter(location_name %in% c("Ellerslie", "Harrow")) %>%
group_by(location_name, treatment_name, replication_number) %>%
group_split
climate_data <- read_climate_data(climate_data_directory = here("data/climate_data","W9param_TablesCleaned"))
climate_data
head(sitedata_ex_onesite, 3)
result_ex_onesite <- run_icbm(
SiteDataTable = sitedata_ex_onesite,
DailyClimateTable = climate_data,
ag_init = 0,
bg_init = 0,
o_init = 0)
result_ex_onesite
sitedata_ex_multipletrmt[1:3] %>%
map(~head(.,3))
result_ex_multipletrmt <- sitedata_ex_multipletrmt %>%
suppressWarnings() %>%
map(function(x) {
run_icbm(
SiteDataTable = x,
DailyClimateTable = climate_data,
ag_init = 0,
bg_init = 0,
o_init = 0)
}
)
result_ex_multipletrmt[1:3] %>%
map(~head(.,3))
result_ex_multipletrmt <- sitedata_ex_multipletrmt %>%
map(~run_icbm(
SiteDataTable = .,
DailyClimateTable = climate_data,
ag_init = 0,
bg_init = 0,
o_init = 0))
sitedata_ex_multiplesite[21:23] %>%
map(~head(.,3))
result_ex_multiplesite <- sitedata_ex_multiplesite %>%
map(~run_icbm(
SiteDataTable = .,
DailyClimateTable = climate_data,
ag_init = 0,
bg_init = 0,
o_init = 0))
result_ex_multiplesite[21:23] %>%
map(~head(.,3))
sitedata_ex_error1 <- sitedata_all %>%
filter(team_name == "B") %>%
filter(year_name >= 1981) %>%
group_by(location_name) %>%
group_split
try(sitedata_ex_error1 %>%
map(~run_icbm(
SiteDataTable = .,
DailyClimateTable = climate_data,
ag_init = 0,
bg_init = 0,
o_init = 0)))
sitedata_ex_error1 %>%
map(~any(duplicated(.$year_name))) %>%
unlist
sitedata_ex_multiplesite %>%
map(~any(duplicated(.$year_name))) %>%
unlist
sitedata_ex_error2 <- sitedata_all %>%
filter(team_name == "B") %>%
filter(year_name >= 1981) %>%
group_by(team_name, location_name, treatment_name, replication_number) %>%
group_split
sitedata_ex_error2 %>%
map(~any(duplicated(.$year_name))) %>%
unlist
sitedata_ex_depth <- sitedata_all %>%
filter(team_name == "B") %>%
filter(year_name >= 1981) %>%
mutate(soil_depth = paste0(soil_depth_min_cm,"-",soil_depth_max_cm)) %>%
group_by(team_name, location_name, treatment_name, replication_number, plot_id, soil_depth) %>%
group_split
sitedata_ex_depth %>%
map(~any(duplicated(.$year_name))) %>%
unlist
result_ex_depth <- sitedata_ex_depth[1:10] %>%
map(~run_icbm(
SiteDataTable = .,
DailyClimateTable = climate_data,
ag_init = 0,
bg_init = 0,
o_init = 0))
result_ex_depth[1:3] %>%
map(~head(.,3))
result_ex_multipletrmt_override <- sitedata_ex_multipletrmt %>%
map(~run_icbm(
SiteDataTable = .,
DailyClimateTable = climate_data,
ag_init = 0,
bg_init = 0,
o_init = 0,
# overrides
hag = 0.1))
tibble(Year = result_ex_multipletrmt[[1]]$time,
`Total SOC Regular` = result_ex_multipletrmt[[1]]$Tot,
`Total SOC Overridden` = result_ex_multipletrmt_override[[1]]$Tot)
param_bounds <- read.csv(here("data/ipcct2_parameters_gsa.csv"), stringsAsFactors = FALSE)
param_bounds
sa_ex_onesite_sj <- gsa(site_data = sitedata_ex_onesite,
climate_data = climate_data,
parameter_bounds = param_bounds,
sample_size = 10,
method = "soboljansen")
sa_ex_onesite_sj
sa_ex_onesite_f99 <- gsa(site_data = sitedata_ex_onesite,
climate_data = climate_data,
parameter_bounds = param_bounds,
sample_size = 100,
method = "fast99")
#================================
# Global sensitivity analysis using Sobols method in R using sensitivity package
#================================
library(sensitivity)
library(boot)
library(doParallel)
library(parallel)
library(foreach)
library(here)
library(ggplot2)
source(here::here("r/ipcct2_run.r"))
source(here::here("r/bayesian_loglike.r"))
gsa <- function(site_data,
climate_data,
parameter_bounds,
sample_size = 10,
method = "soboljansen") {
# methods include either "soboljansen" or "fast99"
# site_data can either be a data.frame, or a list of data.frames
if(!inherits(site_data, "list")) {
site_data <- list(site_data)
}
# read prior distribution from a csv file
# (Required columns: Parameter, value, lower, upper)
paramBounds <- parameter_bounds
# names of parameters that are allowed to vary
varSI       <- paramBounds$Parameter
nParams     <- length(varSI)
# sample size (10 used for illustration purposes)
# (1024 used in Gurung et al., 2020)
N <- sample_size
# Sobols method required 2 matrix
m1 = matrix(runif(nParams*N), nrow=N);
m2 = matrix(runif(nParams*N), nrow=N);
M1 <- matrix(0, nrow = N, ncol = nParams)
M2 <- matrix(0, nrow = N, ncol = nParams)
# transform standard uniform to prior distribution
for(i in 1:nParams){
pos <- which(paramBounds$Parameter == varSI[i])
lower <- paramBounds[pos, "lower"]
upper <- paramBounds[pos, "upper"]
M1[, i] <- qunif(m1[, i], min = lower, max = upper)
M2[, i] <- qunif(m2[, i], min = lower, max = upper)
}
X1 = data.frame(M1)
X2 = data.frame(M2)
names(X1) <- varSI
names(X2) <- varSI
# choose a sensitivity method of your choice from the sensitivity package in R.
# see documentation for available options.
if(method == "fast99") {
fast99_qargs <- paramBounds %>%
group_by(Parameter) %>%
select(Parameter, min = lower, max = upper) %>%
group_split %>%
map(function(x) {y <- x %>%
select(-Parameter) %>%
as.list()
})
}
si_obj2 <- switch(method,
soboljansen = sensitivity::soboljansen(model = NULL, X1 = X1, X2 = X2, nboot = 100),
fast99 = sensitivity::fast99(model = NULL,
factors = paramBounds$Parameter,
n = N, M = 4,
q="qunif",
q.arg = fast99_qargs))
X <- si_obj2$X
n <- nrow(X)
X <- cbind("SampleID" = 1:nrow(X), X)
params_list_sorted_names <- c("SampleID",varSI)
params_list <- X %>%
rowwise %>%
group_split %>%
map(function(x) {
y <- x %>%
pivot_longer(everything()) %>%
deframe()
z <- split(unname(y),names(y))
return(z)
}) %>%
map(~ .[params_list_sorted_names])
# Run the model and calculate log-likelihood
# likelihoods were calculated assuming that the error (modeled - mesasured) are iid
Lkhood <- NULL
Lkhood_list <- list()
for(site_n in 1:length(site_data)) {
ncores=parallel::detectCores()-2
cl=parallel::makeCluster(ncores)
doParallel::registerDoParallel(cl)
Lkhood=foreach(i=1:nrow(X),
.combine = rbind,
.packages = c("parallel",
"doParallel",
"tidyverse"),
.export = c("run_ipcct2",
"IPCCTier2SOMmodel",
"loglik",
"run_ipcct2_calculate_loglik")) %dopar%
run_ipcct2_calculate_loglik(site_data[[site_n]], climate_data, i)
stopCluster(cl)
Lkhood_list[[site_n]] <- Lkhood
}
# # code for non-paralleled run (defunct)
# Lkhood_list <- list()
# for(i in 1:length(params_list)){
# 	Lkhood_list[[i]] <- run_ipcct2_calculate_loglik(params_list[[i]])
# }
Lkhood1 <- Lkhood_list %>%
bind_rows %>%
mutate(loglik = ifelse(loglik == -Inf, NA, loglik)) %>%
group_by(id) %>%
summarise(loglik = mean(loglik, na.rm=T))
si_obj2_llkhd <- sensitivity::tell(x = si_obj2, y = Lkhood1$loglik)
if(method == "soboljansen")
{
# Calculate First-order and Total global sensitivity indices
singleSI <- si_obj2_llkhd$S %>%
select(singsi = original, singsi.lci = `min. c.i.`, singsi.uci = `max. c.i.`) %>%
rownames_to_column("params") %>%
as_tibble()
totalSI <- si_obj2_llkhd$T %>%
select(totsi = original, totsi.lci = `min. c.i.`, totsi.uci = `max. c.i.`) %>%
rownames_to_column("params") %>%
as_tibble()
combined_si <- totalSI %>%
full_join(singleSI, by=c("params"))
return_si <- combined_si
}
if(method == "fast99")
{
return_si <- tibble(main = si_obj2_llkhd$D1 / si_obj2_llkhd$V,
interactions = 1 - si_obj2_llkhd$Dt / si_obj2_llkhd$V) %>%
mutate(params =  varSI, .before=main)
}
return(return_si)
}
sa_ex_onesite_f99 <- gsa(site_data = sitedata_ex_onesite,
climate_data = climate_data,
parameter_bounds = param_bounds,
sample_size = 100,
method = "fast99")
sa_ex_onesite_f99
ggplot(sa_ex_onesite_f99)+
geom_bar(aes(x=reorder(params, interactions), y=main),stat='identity',
fill="black") +
geom_bar(aes(x=reorder(params, interactions), y=interactions),
stat='identity', fill="grey",alpha=0.7 ) +
coord_flip() +
theme_bw()
The sensitivity analysis can also be run on a list of multiple sites/treatments.
sa_ex_multipletrmt <- gsa(site_data = sitedata_ex_multipletrmt,
climate_data = climate_data,
parameter_bounds = param_bounds,
sample_size = 10)
sa_ex_multipletrmt
# First-order sensitivity
ggplot(sa_ex_onesite, aes(x = reorder(params, -singsi), y = singsi, ymax=singsi.uci, ymin=singsi.lci)) +
xlab("Parameters") +
ylab("First-Order Sensitivity Index") +
geom_errorbar(width=0.2, size=1, color="black") +
geom_bar(stat='identity', fill="grey", alpha=0.70 ) +
coord_flip() +
theme_bw()
# First-order sensitivity
ggplot(sa_ex_multipletrmt, aes(x = reorder(params, -singsi), y = singsi, ymax=singsi.uci, ymin=singsi.lci)) +
xlab("Parameters") +
ylab("First-Order Sensitivity Index") +
geom_errorbar(width=0.2, size=1, color="black") +
geom_bar(stat='identity', fill="grey", alpha=0.70 ) +
coord_flip() +
theme_bw()
# First-order sensitivity
ggplot(sa_ex_multipletrmt, aes(x = reorder(params, -singsi), y = singsi, ymax=singsi.uci, ymin=singsi.lci)) +
xlab("Parameters") +
ylab("First-Order Sensitivity Index") +
geom_errorbar(width=0.2, size=1, color="black") +
geom_bar(stat='identity', fill="grey", alpha=0.70 ) +
coord_flip() +
theme_bw()
# Total order sensitivity
ggplot(sa_ex_multipletrmt, aes(x = reorder(params, -singsi), y = totsi, ymax=totsi.uci, ymin=totsi.lci))+
xlab("Parameters") +
ylab("Total-Order Sensitivity Index") +
geom_errorbar(width=0.2, size=1, color="black")+
geom_bar(stat='identity', fill="grey", alpha=0.70) +
coord_flip() +
theme_bw()
# Both
ggplot(sa_ex_multipletrmt, aes(x = reorder(params, -singsi), y = totsi, ymax=totsi.uci, ymin=totsi.lci)) +
geom_bar(aes(y = singsi), stat='identity', fill="black", alpha=0.7)+
geom_bar(aes(y = totsi), stat='identity', fill="grey", alpha=0.7)+
geom_errorbar(width=0.2, size=1)+
coord_flip() +
theme_bw()
param_bounds
sa_ex_onesite_sj
sir_ex_multipletrmt <- sir(site_data = sitedata_ex_multipletrmt,
climate_data = climate_data,
parameter_bounds = param_bounds,
sample_size = 100,
resample_size = 10)
sir_ex_multipletrmt
prior <- sir_ex_multipletrmt$prior %>%
pivot_longer(cols = !`SampleID`)
posterior <- sir_ex_multipletrmt$posterior %>%
pivot_longer(cols = !`SampleID`)
ggplot() +
geom_density(data = posterior, aes(value), col = NA, fill = "red", alpha = 0.2) +
geom_density(data = prior, aes(value), col = NA, fill = "blue", alpha = 0.2) +
facet_wrap(~name, scales = "free", ncol = 3) +
theme_bw() +
theme(panel.border = element_rect(colour = "black", fill = NA), panel.grid.major = element_blank(),
axis.title.x=element_blank(),panel.grid.minor = element_blank()) +
scale_y_continuous(expand = c(0,0)) + scale_x_continuous(expand = c(0,0))
uncertainty_ex_multipletrmt <- montecarlo(site_data = sitedata_ex_multipletrmt,
climate_data = climate_data,
distribution = sir_ex_multipletrmt$posterior,
sample_size = 10)
uncertainty_ex_multipletrmt
ggplot(data = NULL, aes(x=soc_total/10, y=soc_tha_30cm)) +
geom_point(data=uncertainty_ex_multipletrmt$montecarlo, color = "grey") +
geom_point(data=uncertainty_ex_multipletrmt$median, color="black") +
geom_abline(intercept = 0, slope = 1) +
coord_fixed(ratio = 1, xlim = c(0,400), ylim = c(0,400), expand = TRUE, clip="off") +
theme_bw()
