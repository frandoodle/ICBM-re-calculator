model_actual <- modelled %>%
full_join(actuals, by=c("site", "year")) %>%
filter(!is.na(actual))
loglike <- loglik(model_actual$soc_total, model_actual$actual)
Lkhood[[i]] <- tibble(id = params_list[[i]]$SampleID, loglike = loglike)
#View(lkd)
# Lkhood <- rbind(Lkhood, lkd)
}
Lkhood1 <- Lkhood %>%
unlist
Lkhood1
Lkhood1 <- Lkhood %>%
bind_rows
Lkhood1
Lkhood1 <- Lkhood %>%
bind_rows %>%
mutate(loglike = ifelse(loglik==-Inf, NA, loglik)) %>%
group_by(id) %>%
summarise(loglike = mean(loglike, na.rm=T))
Lkhood1 <- Lkhood %>%
bind_rows %>%
mutate(loglike = ifelse(loglik == -Inf, NA, loglik)) %>%
group_by(id) %>%
summarise(loglike = mean(loglike, na.rm=T))
Lkhood1 <- Lkhood %>%
bind_rows %>%
mutate(loglike = ifelse(loglike == -Inf, NA, loglike)) %>%
group_by(id) %>%
summarise(loglike = mean(loglike, na.rm=T))
Lkhood1
#==============================
# Calculate First-order and Total global sensitivity indices
#==============================
si_obj2_llkhd <- tell(x = si_obj2, y = Lkhood1$loglik)
Lkhood <- list()
for(i in 1:length(params_list)){
#i=1
# print(paste(date(), "Case: ", i))
modelled <- do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
params_list[[i]]))
actuals <-  input_sitedata %>%
mutate(POLYID = as.character(POLYID)) %>%
select(site = POLYID, year = year_name,  actual = soc_tha_30cm)
model_actual <- modelled %>%
full_join(actuals, by=c("site", "year")) %>%
filter(!is.na(actual))
loglik <- loglik(model_actual$soc_total, model_actual$actual)
Lkhood[[i]] <- tibble(id = params_list[[i]]$SampleID, loglik = loglik)
#View(lkd)
# Lkhood <- rbind(Lkhood, lkd)
}
Lkhood <- list()
for(i in 1:length(params_list)){
#i=1
# print(paste(date(), "Case: ", i))
modelled <- do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
params_list[[i]]))
actuals <-  input_sitedata %>%
mutate(POLYID = as.character(POLYID)) %>%
select(site = POLYID, year = year_name,  actual = soc_tha_30cm)
model_actual <- modelled %>%
full_join(actuals, by=c("site", "year")) %>%
filter(!is.na(actual))
loglike <- loglik(model_actual$soc_total, model_actual$actual)
Lkhood[[i]] <- tibble(id = params_list[[i]]$SampleID, loglike = loglike)
#View(lkd)
# Lkhood <- rbind(Lkhood, lkd)
}
loglik=function(m,o){
if(length(m)!=length(o)){
print("Inequal number of modeled and observed values, cannot proceed")
return()
}
res=log(m)-log(o)
sigma=sqrt(mean(res^2))
n=length(m)
#lk=-n*log(sigma)-(1/(2*sigma^2))*sum(res^2)
lk=-n*log(sigma)-(1/(2*sigma^2))*sum(res^2)
return(lk)
}
#test
# m=c(4,3,4,3)
# o=c(4, 3.1, 5, 4)
# loglik(m, o)
#
# logLik(lm(m~o),REML = T )
Lkhood <- list()
for(i in 1:length(params_list)){
#i=1
# print(paste(date(), "Case: ", i))
modelled <- do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
params_list[[i]]))
actuals <-  input_sitedata %>%
mutate(POLYID = as.character(POLYID)) %>%
select(site = POLYID, year = year_name,  actual = soc_tha_30cm)
model_actual <- modelled %>%
full_join(actuals, by=c("site", "year")) %>%
filter(!is.na(actual))
loglike <- loglik(model_actual$soc_total, model_actual$actual)
Lkhood[[i]] <- tibble(id = params_list[[i]]$SampleID, loglike = loglike)
#View(lkd)
# Lkhood <- rbind(Lkhood, lkd)
}
Lkhood <- list()
for(i in 1:length(params_list)){
#i=1
# print(paste(date(), "Case: ", i))
modelled <- do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
params_list[[i]]))
actuals <-  input_sitedata %>%
mutate(POLYID = as.character(POLYID)) %>%
select(site = POLYID, year = year_name,  actual = soc_tha_30cm)
model_actual <- modelled %>%
full_join(actuals, by=c("site", "year")) %>%
filter(!is.na(actual))
loglik <- loglik(model_actual$soc_total, model_actual$actual)
Lkhood[[i]] <- tibble(id = params_list[[i]]$SampleID, loglik = loglik)
#View(lkd)
# Lkhood <- rbind(Lkhood, lkd)
}
loglik=function(m,o){
if(length(m)!=length(o)){
print("Inequal number of modeled and observed values, cannot proceed")
return()
}
res=log(m)-log(o)
sigma=sqrt(mean(res^2))
n=length(m)
#lk=-n*log(sigma)-(1/(2*sigma^2))*sum(res^2)
lk=-n*log(sigma)-(1/(2*sigma^2))*sum(res^2)
return(lk)
}
#test
# m=c(4,3,4,3)
# o=c(4, 3.1, 5, 4)
# loglik(m, o)
#
# logLik(lm(m~o),REML = T )
Lkhood <- list()
for(i in 1:length(params_list)){
#i=1
# print(paste(date(), "Case: ", i))
modelled <- do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
params_list[[i]]))
actuals <-  input_sitedata %>%
mutate(POLYID = as.character(POLYID)) %>%
select(site = POLYID, year = year_name,  actual = soc_tha_30cm)
model_actual <- modelled %>%
full_join(actuals, by=c("site", "year")) %>%
filter(!is.na(actual))
loglik <- loglik(model_actual$soc_total, model_actual$actual)
Lkhood[[i]] <- tibble(id = params_list[[i]]$SampleID, loglik = loglik)
#View(lkd)
# Lkhood <- rbind(Lkhood, lkd)
}
Lkhood <- list()
for(i in 1:length(params_list)){
#i=1
# print(paste(date(), "Case: ", i))
modelled <- do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
params_list[[i]]))
actuals <-  input_sitedata %>%
mutate(POLYID = as.character(POLYID)) %>%
select(site = POLYID, year = year_name,  actual = soc_tha_30cm)
model_actual <- modelled %>%
full_join(actuals, by=c("site", "year")) %>%
filter(!is.na(actual))
loglike <- loglik(model_actual$soc_total, model_actual$actual)
Lkhood[[i]] <- tibble(id = params_list[[i]]$SampleID, loglik = loglike)
#View(lkd)
# Lkhood <- rbind(Lkhood, lkd)
}
Lkhood <- list()
for(i in 1:length(params_list)){
#i=1
# print(paste(date(), "Case: ", i))
modelled <- do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
params_list[[i]]))
actuals <-  input_sitedata %>%
mutate(POLYID = as.character(POLYID)) %>%
select(site = POLYID, year = year_name,  actual = soc_tha_30cm)
model_actual <- modelled %>%
full_join(actuals, by=c("site", "year")) %>%
filter(!is.na(actual))
loglike <- loglik(model_actual$soc_total, model_actual$actual)
Lkhood[[i]] <- tibble(id = params_list[[i]]$SampleID, loglike = loglike)
#View(lkd)
# Lkhood <- rbind(Lkhood, lkd)
}
loglik=function(m,o){
if(length(m)!=length(o)){
print("Inequal number of modeled and observed values, cannot proceed")
return()
}
res=log(m)-log(o)
sigma=sqrt(mean(res^2))
n=length(m)
#lk=-n*log(sigma)-(1/(2*sigma^2))*sum(res^2)
lk=-n*log(sigma)-(1/(2*sigma^2))*sum(res^2)
return(lk)
}
#test
# m=c(4,3,4,3)
# o=c(4, 3.1, 5, 4)
# loglik(m, o)
#
# logLik(lm(m~o),REML = T )
Lkhood <- list()
for(i in 1:length(params_list)){
#i=1
# print(paste(date(), "Case: ", i))
modelled <- do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
params_list[[i]]))
actuals <-  input_sitedata %>%
mutate(POLYID = as.character(POLYID)) %>%
select(site = POLYID, year = year_name,  actual = soc_tha_30cm)
model_actual <- modelled %>%
full_join(actuals, by=c("site", "year")) %>%
filter(!is.na(actual))
loglike <- loglik(model_actual$soc_total, model_actual$actual)
Lkhood[[i]] <- tibble(id = params_list[[i]]$SampleID, loglik = loglike)
#View(lkd)
# Lkhood <- rbind(Lkhood, lkd)
}
Lkhood1 <- Lkhood %>%
bind_rows %>%
mutate(loglik = ifelse(loglik == -Inf, NA, loglik)) %>%
group_by(id) %>%
summarise(loglik = mean(loglik, na.rm=T))
Lkhood1
#==============================
# Calculate First-order and Total global sensitivity indices
#==============================
si_obj2_llkhd <- tell(x = si_obj2, y = Lkhood1$loglik)
si_obj2
si_obj2 <- sensitivity::soboljansen(model = NULL, X1 = X1, X2 = X2, nboot = 100)
X <- si_obj2$X
n <- nrow(X)
X <- cbind("SampleID" = 1:nrow(X), X)
si_obj2
si_obj2 <- sensitivity::soboljansen(model = NULL, X1 = X1, X2 = X2, nboot = 100)
si_obj2
input_sitedata <- sitedata_ex_onesite
source("GSA/RunIPCC_GSA.R")
# read prior distribution from a csv file
paramBounds <- read.csv("GSA/cal_parameters_V1.csv", stringsAsFactors = FALSE)
# names of parameters that are allowed to vary
varSI       <- paramBounds$Parameter
nParams     <- length(varSI)
# Random sampling for GSA
set.seed(10)
# sample size (10 used for illustration purposes)
N <- 10 # (1024 used in Gurung et al., 2020)
paramBounds[1,4]=3.036
paramBounds[1,5]=3.036
paramBounds[2,4]=2.075
paramBounds[2,5]=2.075
# Sobols method required 2 matrix
m1 = matrix(runif(nParams*N), nrow=N);
m2 = matrix(runif(nParams*N), nrow=N);
M1 <- matrix(0, nrow = N, ncol = nParams)
M2 <- matrix(0, nrow = N, ncol = nParams)
# transform standard uniform to prior distribution
for(i in 1:nParams){
pos <- which(paramBounds$Parameter == varSI[i])
lower <- paramBounds[pos, "lower"]
upper <- paramBounds[pos, "upper"]
M1[, i] <- qunif(m1[, i], min = lower, max = upper)
M2[, i] <- qunif(m2[, i], min = lower, max = upper)
}
X1 = data.frame(M1)
X2 = data.frame(M2)
names(X1) <- varSI
names(X2) <- varSI
si_obj2 <- sensitivity::soboljansen(model = NULL, X1 = X1, X2 = X2, nboot = 100)
X <- si_obj2$X
n <- nrow(X)
X <- cbind("SampleID" = 1:nrow(X), X)
params_list <- X %>%
rowwise %>%
group_split %>%
map(function(x) {y <- x %>%
pivot_longer(everything()) %>%
deframe()
z <- split(unname(y),names(y))})
Lkhood <- NULL
ncores=parallel::detectCores()-2
cl=parallel::makeCluster(ncores)
doParallel::registerDoParallel(cl)
Lkhood=foreach(i=1:nrow(X),
.combine = rbind,
.packages = c("parallel",
"doParallel",
"tidyverse"))%dopar% RunIPCC(i, X, Driver ,value)
stopCluster(cl)
Lkhood <- list()
for(i in 1:length(params_list)){
#i=1
# print(paste(date(), "Case: ", i))
modelled <- do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
params_list[[i]]))
actuals <-  input_sitedata %>%
mutate(POLYID = as.character(POLYID)) %>%
select(site = POLYID, year = year_name,  actual = soc_tha_30cm)
model_actual <- modelled %>%
full_join(actuals, by=c("site", "year")) %>%
filter(!is.na(actual))
loglike <- loglik(model_actual$soc_total, model_actual$actual)
Lkhood[[i]] <- tibble(id = params_list[[i]]$SampleID, loglik = loglike)
#View(lkd)
# Lkhood <- rbind(Lkhood, lkd)
}
params_list <- params_list[1:5]
Lkhood <- list()
for(i in 1:length(params_list)){
#i=1
# print(paste(date(), "Case: ", i))
modelled <- do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
params_list[[i]]))
actuals <-  input_sitedata %>%
mutate(POLYID = as.character(POLYID)) %>%
select(site = POLYID, year = year_name,  actual = soc_tha_30cm)
model_actual <- modelled %>%
full_join(actuals, by=c("site", "year")) %>%
filter(!is.na(actual))
loglike <- loglik(model_actual$soc_total, model_actual$actual)
Lkhood[[i]] <- tibble(id = params_list[[i]]$SampleID, loglik = loglike)
#View(lkd)
# Lkhood <- rbind(Lkhood, lkd)
}
Lkhood1 <- Lkhood %>%
bind_rows %>%
mutate(loglik = ifelse(loglik == -Inf, NA, loglik)) %>%
group_by(id) %>%
summarise(loglik = mean(loglik, na.rm=T))
#==============================
# Calculate First-order and Total global sensitivity indices
#==============================
si_obj2_llkhd <- tell(x = si_obj2, y = Lkhood1$loglik)
singleSI <-si_obj2_llkhd$S # individual sensitivity indices
?tell
Lkhood1$loglik
Lkhood=foreach(i=1:nrow(X),
.combine = rbind,
.packages = c("parallel",
"doParallel",
"tidyverse"))%dopar% do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
params_list[[X]]))
ncores=parallel::detectCores()-2
cl=parallel::makeCluster(ncores)
doParallel::registerDoParallel(cl)
Lkhood=foreach(i=1:nrow(X),
.combine = rbind,
.packages = c("parallel",
"doParallel",
"tidyverse"))%dopar% do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
params_list[[X]]))
Lkhood=foreach(i=1:nrow(X),
.combine = rbind,
.packages = c("parallel",
"doParallel",
"tidyverse"))%dopar% do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
X))
X
?foreach
Lkhood=foreach(i=1:nrow(X),
.combine = rbind,
.packages = c("parallel",
"doParallel",
"tidyverse"),
.export = c("run_ipcct2")) %dopar%
do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
X))
ncores
Lkhood=foreach(i=1:nrow(X),
.combine = rbind,
.packages = c("parallel",
"doParallel",
"tidyverse"),
.export = c("run_ipcct2",
"IPCCTier2SOMmodel")) %dopar%
do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
X))
Lkhood
Lkhood1 <- Lkhood %>%
bind_rows %>%
mutate(loglik = ifelse(loglik == -Inf, NA, loglik)) %>%
group_by(id) %>%
summarise(loglik = mean(loglik, na.rm=T))
Lkhood <- list()
for(i in 1:length(params_list)){
#i=1
# print(paste(date(), "Case: ", i))
modelled <- do.call("run_ipcct2",
append(list(input_sitedata, climate_data,
init_active = 0,
init_slow = 0,
init_passive = 0),
params_list[[i]]))
actuals <-  input_sitedata %>%
mutate(POLYID = as.character(POLYID)) %>%
select(site = POLYID, year = year_name,  actual = soc_tha_30cm)
model_actual <- modelled %>%
full_join(actuals, by=c("site", "year")) %>%
filter(!is.na(actual))
loglike <- loglik(model_actual$soc_total, model_actual$actual)
Lkhood[[i]] <- tibble(id = params_list[[i]]$SampleID, loglik = loglike)
#View(lkd)
# Lkhood <- rbind(Lkhood, lkd)
}
Lkhood1 <- Lkhood %>%
bind_rows %>%
mutate(loglik = ifelse(loglik == -Inf, NA, loglik)) %>%
group_by(id) %>%
summarise(loglik = mean(loglik, na.rm=T))
#==============================
# Calculate First-order and Total global sensitivity indices
#==============================
si_obj2_llkhd <- tell(x = si_obj2, y = Lkhood1$loglik)
?sensitivity::soboljansen
Lkhood1
Lkhood1[, 2]
Lkhood1$loglik
#==============================
# Calculate First-order and Total global sensitivity indices
#==============================
si_obj2_llkhd <- tell(x = si_obj2, y = Lkhood1)
?tell
si_obj2
view(si_obj2)
View(si_obj2)
#==============================
# Calculate First-order and Total global sensitivity indices
#==============================
si_obj2_llkhd <- tell(x = si_obj2, y = Lkhood1$loglik)
#==============================
# Calculate First-order and Total global sensitivity indices
#==============================
si_obj2_llkhd <- tell(x = si_obj2, y = Lkhood1)
?estim
estim.soboljansen
#==============================
# Calculate First-order and Total global sensitivity indices
#==============================
si_obj2_llkhd <- sensitivity::tell(x = si_obj2, y = Lkhood1)
Lkhood1
#==============================
# Calculate First-order and Total global sensitivity indices
#==============================
si_obj2_llkhd <- sensitivity::tell(x = si_obj2, y = Lkhood1$loglik)
Lkhood1$loglik
si_obj2$V
