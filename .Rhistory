yield=3000
re <- re_input %>%
group_by(Year) %>%
group_split() %>%
map(~calculate_re(.,
yield = yield,
perennial = perennial,
SoilOrganicC_Percent = SoilOrganicC_Percent,
ClayContent = ClayContent,
SandContent = SandContent,
alfa = alfa,
SoilTopThickness = SoilTopThickness,
Temp_min = Temp_min,
Temp_max = Temp_max,
r_s = r_s,
r_wp = r_wp,
ReferenceAdjustment = ReferenceAdjustment,
r_c = r_c,
tillage_soil = tillage_soil,
tillage_type = tillage_type,
irrigation_region = irrigation_region,
irrigation_use_estimate = irrigation_use_estimate,
irrigation = irrigation)) %>%
unlist()
re
# 			 Should be a vector of the same length as "times"
# re - a soil climate-and management parameter that aggregates
#			 the external influences on soil biological activity
#			 Should be a single, constant numerical value (?).
#			 OR MAYBE: Should be a vector of the same length as "times"
# yopool - A vector of length 3 representing the
#					 Initial C pools.
#						yopool = c(initial young aboveground C,
#											 initial young belowground C,
#											 initial old C)
yopool = c(iag = iag_init,
ibg = ibg_init,
io = io_init)
iag_init = 0
ibg_init = 0
io_init = 0
# 			 Should be a vector of the same length as "times"
# re - a soil climate-and management parameter that aggregates
#			 the external influences on soil biological activity
#			 Should be a single, constant numerical value (?).
#			 OR MAYBE: Should be a vector of the same length as "times"
# yopool - A vector of length 3 representing the
#					 Initial C pools.
#						yopool = c(initial young aboveground C,
#											 initial young belowground C,
#											 initial old C)
yopool = c(iag = iag_init,
ibg = ibg_init,
io = io_init)
result <- icbm_holos4_classic_manure(times = simulation_years,
iag = iag,
ibg = ibg,
iman = iman,
re = re,
yopool = yopool)
simulation_years <- unique(DailyClimateTable$Year)
result <- icbm_holos4_classic_manure(times = simulation_years,
iag = iag,
ibg = ibg,
iman = iman,
re = re,
yopool = yopool)
library(tidyverse)
######################code working perfectly like Sarah's################
# iag=39+43.1346
# ibg=102.9+113.6694
# re=1.1
# kY=0.8
# Yag=(iag)*exp(re*-kY)
# Ybg= (ibg)*exp(re*-kY)
# hY=0.125
# kO=0.00605
# hbg=0.3
# init_Carbon=38162.9212
# O=((init_Carbon-(hY*kY*(Yag+iag)/(kO-kY))-(hbg*kY*(Ybg+ibg)/(kO-kY)))*exp(-kO*re))+
#   ((hY*kY*(Yag+iag)/(kO-kY))*exp(-kY*re))+
#   ((hbg*kY*(Ybg+ibg)/(kO-kY))*exp(-kY*re))
# SOC=Yag+Ybg+O
# print(SOC)
###########################################################################
# times - the number of years to run
# iag - annual carbon input to aboveground young C pool (?).
# 			Should be a vector of the same length as "times"
# ibg - annual carbon input to belowground young C pool (?).
# 			Should be a vector of the same length as "times"
# iman - annual carbon input to manure young C pool (?).
# 			 Should be a vector of the same length as "times"
# re - a soil climate-and management parameter that aggregates
#			 the external influences on soil biological activity
#			 Should be a single, constant numerical value (?).
#			 OR MAYBE: Should be a vector of the same length as "times"
# yopool - A vector of length 3 representing the
#					 Initial C pools.
#						yopool = c(initial young aboveground C,
#											 initial young belowground C,
#											 initial old C)
icbm_holos4_classic_manure=function(times, iag, ibg,iman,re, yopool){
# times=1983:2009
# the number of years for the run
#yopool=c(0, 38643.15,0 )
#re=0.98
#testdata=read.csv("~/ICBM/TestData/FW2_N45P20_VarYield_12-17.csv")
#times=min(testdata$Year):max(testdata$Year)
n=length(times)
#Vectoring the inputs
kO=rep(0.00605,n)  # decomposition rate of old carbon pool
kY=rep(0.8,n)
hag=rep(0.125,n)
hm=rep(0.31, n)
hbg=rep(0.3, n)
Yag=list()
Ybg=list()
Yman=list() # Code for Manure
O=list()
#re=rep(re, n)
##TEST CODE###
# iag=rep(977,n)
# ibg=rep(288,n)
# iman=rep(88,n) # Code for Manure
# yag_ini=109
# ybg_ini=288
# iag=testdata$iag
# ibg=testdata$ibg
# iman=testdata$m
# re=testdata$re_crop
# This is a transparent implementation of ICBM classic version suggested by Roland and Sarah (Lethbridge AAFC)
# The spreadsheet version has been ported to R using the same formulae
for(run in 1:n){
if(run==1)
{
#run=1
Yag[[run]]=(yopool[[1]]+iag[[run]])*exp(re[[run]]*-kY[[run]])
Ybg[[run]]=(yopool[[3]]+ibg[[run]])*exp(re[[run]]*-kY[[run]])
#Yman[[run]]=(yopool[[1]]+iman[[run]])*exp(re[[run]]*-kY[[run]]) # Code for Manure
Yman[[run]]=(0+0)*exp(re[[run]]*-kY[[run]]) # Code for Manure
O[[run]]=yopool[[2]]
}
else{
#run=2
fa=re[run]*-kY[run]
Yag[[run]]=(Yag[[run-1]]+
iag[[run-1]])*exp(fa)
Ybg[[run]]=(Ybg[[run-1]]+
ibg[[run-1]])*exp(fa)
Yman[[run]]=(Yman[[run-1]]+
iman[[run-1]])*exp(fa)
O[[run]]=((O[[run-1]]-(hag[[run]]*kY[[run]]*(Yag[[run-1]]+iag[[run-1]])/(kO[[run]]-kY[[run]]))-
(hbg[[run]]*kY[[run]]*(Ybg[[run-1]]+ibg[[run-1]])/(kO[[run]]-kY[[run]]))-
(hm[[run]]*kY[[run]]*(Yman[[run-1]]+iman[[run-1]])/(kO[[run]]-kY[[run]])))*exp(-kO[[run]]*re[[run]]))+
((hag[[run]]*kY[[run]]*(Yag[[run-1]]+iag[[run-1]])/(kO[[run]]-kY[[run]]))*exp(-kY[[run]]*re[[run]]))+
((hbg[[run]]*kY[[run]]*(Ybg[[run-1]]+ibg[[run-1]])/(kO[[run]]-kY[[run]]))*exp(-kY[[run]]*re[[run]]))+
((hm[[run]]*kY[[run]]*(Yman[[run-1]]+iman[[run-1]])/(kO[[run]]-kY[[run]]))*exp(-kY[[run]]*re[[run]])) #Code for Manure
# hag_par=hag[[run]]*(kY[[run]]*(Yag[[run-1]]+iag[[run-1]]))/(kO[[run]]-kY[[run]])
# hbg_par=hbg[[run]]*(kY[[run]]*(Ybg[[run-1]]+ibg[[run-1]]))/(kO[[run]]-kY[[run]])
# hman_par=hm[[run]]*kY[[run]]*(Yman[[run-1]]+iman[[run-1]])/(kO[[run]]-kY[[run]])
#
# print(run)
# print(hag_par)
# print(hbg_par)
# print(hman_par)
# term1= (O[[run-1]]-hag_par-hbg_par-hman_par)*exp(-kO[run]*re[run])
#
# expterm=exp(-kY[run]*re[run])
#
#
# O[[run]]=term1+hag_par*expterm+hbg_par*expterm+hman_par*expterm
}
}
#print(length(time))
print(length(Yag))
print(length(Ybg))
print(length(O))
print(length(Yman))
out=data.frame("time"=times, "Yag"=unlist(Yag), "Ybg"=unlist(Ybg), "Old"=unlist(O), "YManure"=unlist(Yman))
out$Tot=out$Yag+out$Ybg+out$Old+out$YManure
out$re=re
#View(out)
return(out%>%arrange(time))
}
kY=0.8
hY=0.125
kO=0.00605
hbg=0.3
hm=0.31
hag=0.125
# steady state
Yss=function(Cinput, re)
{
#Cinput=880
#re=0.8
Cinput*(exp(-kY*re))/(1-exp(-kY*re))
}
Oss=function(Cag,Cbg,Cm,re){
yag=Yss(Cag,re)
ybg=Yss(Cbg,re)
ym=Yss(Cm,re)
p1=(exp(-kY*re)-exp(kO*re))/(1-exp(-kO*re))
p2=((hag*kY)*(yag+Cag)+(hbg*kY)*(ybg+Cbg)+(hm*kY)*(ym+Cm))/(kO-kY)
return(data.frame(yagss=yag, yabss=ybg, ymss=ym, oldss=p1*p2))
}
#Testing code
# Oss(0.567, 0.166, 0,1)
# Oss(567, 166, 0,1)
result <- icbm_holos4_classic_manure(times = simulation_years,
iag = iag,
ibg = ibg,
iman = iman,
re = re,
yopool = yopool)
View(result)
dir.create(tempdir()) # This fixes a bug if the temporary directory is not found
here::i_am("run_icbm_and_re.r")
source(here::here("re_functions.r"))
source(here::here("re_script.r"))
source(here::here("ICBM_Sarah_TimeSeries_Tested_Manure_V1.r"))
# Overall Inputs ------------------------------------------------------------
# Yield - the annual crop yield for each year
# iag - annual carbon input to aboveground young C pool for each year
# ibg - annual carbon input to belowground young C pool for each year
# iman - annual carbon input to manure young C pool for each year.
# iag_init - initial aboveground young C pool
# ibg_init - initial belowground young C pool
# io_init - initial old C pool
# DailyClimateTable - a table with daily climate data for every year you
# 										intend to simulate
# 										Required columns:
# 											- Year
# 											- MeanDailyAirTemperature (celsius)
# 											- MeanDailyPrecipitation (mm)
# 											- MeanDailyPET (mm)
# Perennial - (TRUE/FALSE) whether the crop is perennial
# SoilOrganicC_Percent - (0-100) soil OC%
# ClayContent - (0-1) soil clay content
# SandContent - (0-1) soil sand content
RunICBMAndRe <- function(DailyClimateTable,
perennial,
SoilOrganicC_Percent,
ClayContent,
SandContent,
yield,
iag,
ibg,
iman,
iag_init = 0,
ibg_init = 0,
io_init = 0,
alfa = 0.7,
SoilTopThickness = 250,
Temp_min = -3.78,
Temp_max = 30,
r_s = 0.42,
r_wp = 0.18,
ReferenceAdjustment = 0.10516,
r_c = NA,
tillage_soil = "Brown",
tillage_type = "Intensive Tillage",
irrigation_region = "Canada",
irrigation_use_estimate = FALSE,
irrigation = 0)
{
simulation_years <- unique(DailyClimateTable$Year)
# Calculate re for all years ------------------------------------------------
#	re Inputs ---
#	YearInputTable - a table with 365 rows representing various model
#									 inputs for the year
#	irrigation_use_estimate - logical (TRUE/FALSE) indicating whether you want
#														to use the built-in irrigation equation (TRUE), or
#														input your own irrigation values (FALSE)
re_input <- DailyClimateTable %>%
rename(Tavg = MeanDailyAirTemperature,
PREC = MeanDailyPrecipitation,
PET = MeanDailyPET)
re <- re_input %>%
group_by(Year) %>%
group_split() %>%
map(~calculate_re(.,
yield = yield,
perennial = perennial,
SoilOrganicC_Percent = SoilOrganicC_Percent,
ClayContent = ClayContent,
SandContent = SandContent,
alfa = alfa,
SoilTopThickness = SoilTopThickness,
Temp_min = Temp_min,
Temp_max = Temp_max,
r_s = r_s,
r_wp = r_wp,
ReferenceAdjustment = ReferenceAdjustment,
r_c = r_c,
tillage_soil = tillage_soil,
tillage_type = tillage_type,
irrigation_region = irrigation_region,
irrigation_use_estimate = irrigation_use_estimate,
irrigation = irrigation)) %>%
unlist()
# Run ICBM ------------------------------------------------------------------
# ICBM Inputs ---
# times - the number of years to run
# iag - annual carbon input to aboveground young C pool (?).
# 			Should be a vector of the same length as "times"
# ibg - annual carbon input to belowground young C pool (?).
# 			Should be a vector of the same length as "times"
# iman - annual carbon input to manure young C pool (?).
# 			 Should be a vector of the same length as "times"
# re - a soil climate-and management parameter that aggregates
#			 the external influences on soil biological activity
#			 Should be a single, constant numerical value (?).
#			 OR MAYBE: Should be a vector of the same length as "times"
# yopool - A vector of length 3 representing the
#					 Initial C pools.
#						yopool = c(initial young aboveground C,
#											 initial young belowground C,
#											 initial old C)
yopool = c(iag = iag_init,
ibg = ibg_init,
io = io_init)
result <- icbm_holos4_classic_manure(times = simulation_years,
iag = iag,
ibg = ibg,
iman = iman,
re = re,
yopool = yopool)
return(result)
}
# Test ----------------------------------------------------------------------
# Import weather data
holos_nasa_climate <- readr::read_csv(here::here("holos_nasa_climate.csv")) %>%
filter(Year >= 2000)
iag <- rep(977,length(unique(holos_nasa_climate$Year)))
ibg <- rep(288,length(unique(holos_nasa_climate$Year)))
iman <- rep(88,length(unique(holos_nasa_climate$Year)))
yield <- rep(3000,nrow(holos_nasa_climate))
RunICBMAndRe(yield = yield,
iag = iag,
ibg = ibg,
iman = iman,
iag_init = 0,
ibg_init = 0,
io_init = 0,
DailyClimateTable = holos_nasa_climate,
perennial = FALSE,
SoilOrganicC_Percent = 5,
ClayContent = 0.05,
SandContent = 0.2,
irrigation_use_estimate = FALSE)
yield <- 3000
dir.create(tempdir()) # This fixes a bug if the temporary directory is not found
here::i_am("run_icbm_and_re.r")
source(here::here("re_functions.r"))
source(here::here("re_script.r"))
source(here::here("ICBM_Sarah_TimeSeries_Tested_Manure_V1.r"))
# Overall Inputs ------------------------------------------------------------
# Yield - the annual crop yield for each year
# iag - annual carbon input to aboveground young C pool for each year
# ibg - annual carbon input to belowground young C pool for each year
# iman - annual carbon input to manure young C pool for each year.
# iag_init - initial aboveground young C pool
# ibg_init - initial belowground young C pool
# io_init - initial old C pool
# DailyClimateTable - a table with daily climate data for every year you
# 										intend to simulate
# 										Required columns:
# 											- Year
# 											- MeanDailyAirTemperature (celsius)
# 											- MeanDailyPrecipitation (mm)
# 											- MeanDailyPET (mm)
# Perennial - (TRUE/FALSE) whether the crop is perennial
# SoilOrganicC_Percent - (0-100) soil OC%
# ClayContent - (0-1) soil clay content
# SandContent - (0-1) soil sand content
RunICBMAndRe <- function(DailyClimateTable,
perennial,
SoilOrganicC_Percent,
ClayContent,
SandContent,
yield,
iag,
ibg,
iman,
iag_init = 0,
ibg_init = 0,
io_init = 0,
alfa = 0.7,
SoilTopThickness = 250,
Temp_min = -3.78,
Temp_max = 30,
r_s = 0.42,
r_wp = 0.18,
ReferenceAdjustment = 0.10516,
r_c = NA,
tillage_soil = "Brown",
tillage_type = "Intensive Tillage",
irrigation_region = "Canada",
irrigation_use_estimate = FALSE,
irrigation = 0)
{
simulation_years <- unique(DailyClimateTable$Year)
# Calculate re for all years ------------------------------------------------
#	re Inputs ---
#	YearInputTable - a table with 365 rows representing various model
#									 inputs for the year
#	irrigation_use_estimate - logical (TRUE/FALSE) indicating whether you want
#														to use the built-in irrigation equation (TRUE), or
#														input your own irrigation values (FALSE)
re_input <- DailyClimateTable %>%
rename(Tavg = MeanDailyAirTemperature,
PREC = MeanDailyPrecipitation,
PET = MeanDailyPET)
re <- re_input %>%
group_by(Year) %>%
group_split() %>%
map(~calculate_re(.,
yield = yield,
perennial = perennial,
SoilOrganicC_Percent = SoilOrganicC_Percent,
ClayContent = ClayContent,
SandContent = SandContent,
alfa = alfa,
SoilTopThickness = SoilTopThickness,
Temp_min = Temp_min,
Temp_max = Temp_max,
r_s = r_s,
r_wp = r_wp,
ReferenceAdjustment = ReferenceAdjustment,
r_c = r_c,
tillage_soil = tillage_soil,
tillage_type = tillage_type,
irrigation_region = irrigation_region,
irrigation_use_estimate = irrigation_use_estimate,
irrigation = irrigation)) %>%
unlist()
# Run ICBM ------------------------------------------------------------------
# ICBM Inputs ---
# times - the number of years to run
# iag - annual carbon input to aboveground young C pool (?).
# 			Should be a vector of the same length as "times"
# ibg - annual carbon input to belowground young C pool (?).
# 			Should be a vector of the same length as "times"
# iman - annual carbon input to manure young C pool (?).
# 			 Should be a vector of the same length as "times"
# re - a soil climate-and management parameter that aggregates
#			 the external influences on soil biological activity
#			 Should be a single, constant numerical value (?).
#			 OR MAYBE: Should be a vector of the same length as "times"
# yopool - A vector of length 3 representing the
#					 Initial C pools.
#						yopool = c(initial young aboveground C,
#											 initial young belowground C,
#											 initial old C)
yopool = c(iag = iag_init,
ibg = ibg_init,
io = io_init)
result <- icbm_holos4_classic_manure(times = simulation_years,
iag = iag,
ibg = ibg,
iman = iman,
re = re,
yopool = yopool)
return(result)
}
# Test ----------------------------------------------------------------------
# Import weather data
holos_nasa_climate <- readr::read_csv(here::here("holos_nasa_climate.csv")) %>%
filter(Year >= 2000)
iag <- rep(977,length(unique(holos_nasa_climate$Year)))
ibg <- rep(288,length(unique(holos_nasa_climate$Year)))
iman <- rep(88,length(unique(holos_nasa_climate$Year)))
yield <- 3000
RunICBMAndRe(yield = yield,
iag = iag,
ibg = ibg,
iman = iman,
iag_init = 0,
ibg_init = 0,
io_init = 0,
DailyClimateTable = holos_nasa_climate,
perennial = FALSE,
SoilOrganicC_Percent = 5,
ClayContent = 0.05,
SandContent = 0.2,
irrigation_use_estimate = FALSE)
RunICBMAndRe(yield = yield,
iag = iag,
ibg = ibg,
iman = iman,
iag_init = 0,
ibg_init = 0,
io_init = 0,
DailyClimateTable = holos_nasa_climate,
perennial = FALSE,
SoilOrganicC_Percent = 5,
ClayContent = 0.05,
SandContent = 0.2,
irrigation_use_estimate = FALSE)
RunICBMAndRe(yield = yield,
iag = iag,
ibg = ibg,
iman = iman,
iag_init = 0,
ibg_init = 0,
io_init = 0,
DailyClimateTable = holos_nasa_climate,
perennial = FALSE,
SoilOrganicC_Percent = 5,
ClayContent = 0.05,
SandContent = 0.2,
irrigation_use_estimate = FALSE)
