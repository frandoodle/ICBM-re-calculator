DailyClimateTable = holos_nasa_climate,
perennial = FALSE,
SoilOrganicC_Percent = 5,
ClayContent = 0.05,
SandContent = 0.2,
irrigation_use_estimate = FALSE)
files <- list.files(here::here(), full.names = TRUE, pattern = "csv$")
files
files <- list.files(here::here(climate_data_folder), full.names = TRUE, pattern = "csv$")
climate_data_folder <- "climate_data"
site_name <- "244003"
files <- list.files(here::here(climate_data_folder), full.names = TRUE, pattern = "csv$")
files
site_name <- "244003"
purrr::map(files, ~readr::read_csv(.))
library(readr)
library(dplyr)
climate_data_folder <- "climate_data"
site_name <- "244003"
files <- list.files(here::here(climate_data_folder), full.names = TRUE, pattern = "csv$")
bb <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows()
View(bb)
site_name <- "244014"
files <- list.files(here::here(climate_data_folder), full.names = TRUE, pattern = "csv$")
bb <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows()
View(bb)
View(bb)
View(bb)
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows() %>%
rename(JulianDay = Julian)
View(climate_data)
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows() %>%
rename(JulianDay = Julian,
Tavg = Tmean,
gg = Bbob)
library(Evapotranspiration)
install.packages(@Evapotranspiration)
install.packages("Evapotranspiration")
library(Evapotranspiration)
View(bb)
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows() %>%
rename(u2 = WindSpeed)
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows() %>%
rename(u2 = WindSpeed,
Rs = Rad)
View(climate_data)
varnames <-  c("Tmax", "Tmin", "Tmean", "Precip", "u2", "Rs", "RH")
weather_formatted_for_ET <- Evapotranspiration::ReadInputs(varnames, climate_data)
climate_formatted <- Evapotranspiration::ReadInputs(varnames, climate_data,
stopmissing = c(99,99,99))
abs(5)
abs(-5)
epsilon
calculate_pet_holos <- function(meanDailyTemperature,
solarRadiation,
relativeHumidity){
term1 = 0.013
if(meanDailyTemperature) {
return(0)
}
if(meanDailyTemperature + 15 == 0) {
return(0)
}
term2 = meanDailyTemperature / (meanDailyTemperature + 15)
term3 = (23.8856 * solarRadiation) + 50
term4 = 1 + ((50 - relativeHumidity) / 70)
result = 0
if(relativeHumidity >= 50) {
result = term1 * term2 * term3
} else {
result = term1 * term2 * term3 * term4
}
if (result < 0) {
result = 0
}
return(result)
}
solarRadiation=.$Rad,
climate_date%>%
climate_date%>%
mutate(pet = calculate_pet_holos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rad,
relativeHumidity=.$RH))
climate_data%>%
mutate(pet = calculate_pet_holos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rad,
relativeHumidity=.$RH))
calculate_pet_holos <- function(meanDailyTemperature,
solarRadiation,
relativeHumidity){
term1 = 0.013
# if(meanDailyTemperature <= 0) {
# 	return(0)
# }
#
# if(meanDailyTemperature + 15 == 0) {
# 	return(0)
# }
term2 = meanDailyTemperature / (meanDailyTemperature + 15)
term3 = (23.8856 * solarRadiation) + 50
term4 = 1 + ((50 - relativeHumidity) / 70)
result <- ifelse(relativeHumidity >= 50,
term1 * term2 * term3,
term1 * term2 * term3 * term4)
ifelse(result < 0, 0, result)
return(result)
}
climate_data%>%
mutate(pet = calculate_pet_holos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rad,
relativeHumidity=.$RH))
climate_data%>%
mutate(pet = calculate_pet_holos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rs,
relativeHumidity=.$RH))
climate_data%>%
mutate(PET = calculate_pet_holos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rs,
relativeHumidity=.$RH))
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows() %>%
mutate(PET = calculate_pet_holos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rs,
relativeHumidity=.$RH))
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows()
View(climate_data)
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows() %>%
mutate(PET = calculate_pet_holos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rad,
relativeHumidity=.$RH))
calculate_pet_holos <- function(meanDailyTemperature,
solarRadiation,
relativeHumidity){
term1 = 0.013
# if(meanDailyTemperature <= 0) {
# 	return(0)
# }
#
# if(meanDailyTemperature + 15 == 0) {
# 	return(0)
# }
term2 = meanDailyTemperature / (meanDailyTemperature + 15)
term3 = (23.8856 * solarRadiation) + 50
term4 = 1 + ((50 - relativeHumidity) / 70)
result <- ifelse(relativeHumidity >= 50,
term1 * term2 * term3,
term1 * term2 * term3 * term4)
result <- ifelse(result < 0, 0, result)
result <- ifelse(meanDailyTemperature <= 0, 0, result)
return(result)
}
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows() %>%
mutate(PET = calculate_pet_holos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rad,
relativeHumidity=.$RH))
View(climate_data)
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows() %>%
mutate(PET = calculate_pet_holos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rad,
relativeHumidity=.$RH))%>%
rename(Tavg = Tmean,
PREC = Precip)
library(here)
library(purrr)
library(readr)
library(dplyr)
climate_data_folder <- "climate_data"
site_name <- "244014"
getClimateData <- function(climate_data_folder,
site_name)
# climate_data_folder is the name of the folder containing .csv files with
# 		daily climate parameters from the NASA Power database
# site_name is the name of the experimental site, which is used
# 		to filter the NASA climate data files
{
files <- list.files(here::here(climate_data_folder), full.names = TRUE, pattern = "csv$")
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows() %>%
mutate(PET = calculatePETHolos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rad,
relativeHumidity=.$RH))%>%
rename(Tavg = Tmean,
PREC = Precip)
return(climate_Data)
}
calculatePETHolos <- function(meanDailyTemperature,
solarRadiation,
relativeHumidity){
# This is a vectorized implementation of the Holos reference PET calculator.
# https://github.com/holos-aafc/Holos/blob/main/H.Core/Calculators/Climate/EvapotranspirationCalculator.cs
term1 = 0.013
term2 = meanDailyTemperature / (meanDailyTemperature + 15)
term3 = (23.8856 * solarRadiation) + 50
term4 = 1 + ((50 - relativeHumidity) / 70)
result <- ifelse(relativeHumidity >= 50,
term1 * term2 * term3,
term1 * term2 * term3 * term4)
result <- ifelse(result < 0, 0, result)
result <- ifelse(meanDailyTemperature <= 0, 0, result)
return(result)
}
getClimateData("climate_data", "244014")
library(here)
library(purrr)
library(readr)
library(dplyr)
climate_data_folder <- "climate_data"
site_name <- "244014"
getClimateData <- function(climate_data_folder,
site_name)
# climate_data_folder is the name of the folder containing .csv files with
# 		daily climate parameters from the NASA Power database
# site_name is the name of the experimental site, which is used
# 		to filter the NASA climate data files
{
files <- list.files(here::here(climate_data_folder), full.names = TRUE, pattern = "csv$")
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows() %>%
mutate(PET = calculatePETHolos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rad,
relativeHumidity=.$RH))%>%
rename(Tavg = Tmean,
PREC = Precip)
return(climate_data)
}
calculatePETHolos <- function(meanDailyTemperature,
solarRadiation,
relativeHumidity){
# This is a vectorized implementation of the Holos reference PET calculator.
# https://github.com/holos-aafc/Holos/blob/main/H.Core/Calculators/Climate/EvapotranspirationCalculator.cs
term1 = 0.013
term2 = meanDailyTemperature / (meanDailyTemperature + 15)
term3 = (23.8856 * solarRadiation) + 50
term4 = 1 + ((50 - relativeHumidity) / 70)
result <- ifelse(relativeHumidity >= 50,
term1 * term2 * term3,
term1 * term2 * term3 * term4)
result <- ifelse(result < 0, 0, result)
result <- ifelse(meanDailyTemperature <= 0, 0, result)
return(result)
}
getClimateData("climate_data", "244014")
library(here)
library(purrr)
library(readr)
library(dplyr)
climate_data_folder <- "climate_data"
site_name <- "244014"
getClimateData <- function(climate_data_folder,
site_name)
# climate_data_folder is the name of the folder containing .csv files with
# 		daily climate parameters from the NASA Power database
# site_name is the name of the experimental site, which is used
# 		to filter the NASA climate data files
{
files <- list.files(here::here(climate_data_folder), full.names = TRUE, pattern = "csv$")
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows() %>%
mutate(MeanDailyPET = calculatePETHolos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rad,
relativeHumidity=.$RH))%>%
rename(MeanDailyAirTemperature = Tmean,
MeanDailyPrecipitation = Precip)
return(climate_data)
}
calculatePETHolos <- function(meanDailyTemperature,
solarRadiation,
relativeHumidity){
# This is a vectorized implementation of the Holos reference PET calculator.
# https://github.com/holos-aafc/Holos/blob/main/H.Core/Calculators/Climate/EvapotranspirationCalculator.cs
term1 = 0.013
term2 = meanDailyTemperature / (meanDailyTemperature + 15)
term3 = (23.8856 * solarRadiation) + 50
term4 = 1 + ((50 - relativeHumidity) / 70)
result <- ifelse(relativeHumidity >= 50,
term1 * term2 * term3,
term1 * term2 * term3 * term4)
result <- ifelse(result < 0, 0, result)
result <- ifelse(meanDailyTemperature <= 0, 0, result)
return(result)
}
# Import weather data
# This is arbitrary weather data from the lat/long 45/45.
holos_nasa_climate <- readr::read_csv(here::here("holos_nasa_climate.csv")) %>%
filter(Year >= 2000)
View(holos_nasa_climate)
# Import weather data
# This is arbitrary weather data from the lat/long 45/45.
holos_nasa_climate <- readr::read_csv(here::here("holos_nasa_climate.csv")) %>%
filter(Year >= 2000) %>%
rename(Tavg = MeanDailyAirTemperature,
PREC = MeanDailyPrecipitation,
PET = MeanDailyPET)
# Import climate data
climate_data <- getClimateData(climate_data_folder = "climate_data",
site_name = "244014")
View(climate_data)
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows() %>%
mutate(PET = calculatePETHolos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rad,
relativeHumidity=.$RH))%>%
rename(Tavg = Tmean,
PREC = Precip,
JulianDay = Julian)
View(climate_data)
library(here)
library(purrr)
library(readr)
library(dplyr)
getClimateData <- function(climate_data_folder,
site_name)
# climate_data_folder is the name of the folder containing .csv files with
# 		daily climate parameters from the NASA Power database
# site_name is the name of the experimental site, which is used
# 		to filter the NASA climate data files
{
files <- list.files(here::here(climate_data_folder), full.names = TRUE, pattern = "csv$")
climate_data <- files %>%
purrr::map(~readr::read_csv(.)) %>%
purrr::map(~filter(., POLYID==site_name)) %>%
bind_rows() %>%
mutate(PET = calculatePETHolos(meanDailyTemperature=.$Tmean,
solarRadiation=.$Rad,
relativeHumidity=.$RH))%>%
rename(Tavg = Tmean,
PREC = Precip,
JulianDay = Julian)
return(climate_data)
}
calculatePETHolos <- function(meanDailyTemperature,
solarRadiation,
relativeHumidity){
# This is a vectorized implementation of the Holos reference PET calculator.
# https://github.com/holos-aafc/Holos/blob/main/H.Core/Calculators/Climate/EvapotranspirationCalculator.cs
term1 = 0.013
term2 = meanDailyTemperature / (meanDailyTemperature + 15)
term3 = (23.8856 * solarRadiation) + 50
term4 = 1 + ((50 - relativeHumidity) / 70)
result <- ifelse(relativeHumidity >= 50,
term1 * term2 * term3,
term1 * term2 * term3 * term4)
result <- ifelse(result < 0, 0, result)
result <- ifelse(meanDailyTemperature <= 0, 0, result)
return(result)
}
# Import climate data
get_climate_data_example <- getClimateData(
climate_data_folder = "climate_data",
site_name = "244014")
# These are arbitrary annual C inputs
iag <- rep(977,length(unique(get_climate_data_example$Year))) #aboveground young
ibg <- rep(288,length(unique(get_climate_data_example$Year))) #belowground young
iman <- rep(88,length(unique(get_climate_data_example$Year))) #manure
# This is annual yield for an arbitrary crop type
yield <- 3000
perennial <- FALSE
# These are arbitrary soil parameters;
# not related to an SLC polygon or the location of the climate data
SoilOrganicC_Percent <- 5
ClayContent <- 0.05
SandContent <- 0.2
RunICBMAndRe(yield = yield,
iag = iag,
ibg = ibg,
iman = iman,
iag_init = 0,
ibg_init = 0,
io_init = 0,
DailyClimateTable = get_climate_data_example,
perennial = perennial,
SoilOrganicC_Percent = SoilOrganicC_Percent,
ClayContent = ClayContent,
SandContent = SandContent,
irrigation_use_estimate = FALSE)
dir.create(tempdir()) # This fixes a bug if the temporary directory is not found
here::i_am("run_icbm_and_re.r")
source(here::here("re_functions.r"))
source(here::here("re_script.r"))
source(here::here("ICBM_Sarah_TimeSeries_Tested_Manure_V1.r"))
library(ggplot2)
library(knitr)
library(dplyr)
library(geojson)
library(tibble)
library(purrr)
library(stringr)
library(here)
library(lubridate)
library(tidyr)
dir.create(tempdir()) #This fixes a bug if the temporary directory is not found
here::i_am("re_walkthrough.rmd")
source(here::here("re_script.r"))
source(here::here("re_functions.r"))
source(here::here("run_icbm_and_re.r"))
# These are arbitrary annual C inputs
iag <- rep(977,length(unique(get_climate_data_example$Year))) #aboveground young
ibg <- rep(288,length(unique(get_climate_data_example$Year))) #belowground young
iman <- rep(88,length(unique(get_climate_data_example$Year))) #manure
# This is annual yield for an arbitrary crop type
yield <- 3000
perennial <- FALSE
# These are arbitrary soil parameters;
# not related to an SLC polygon or the location of the climate data
SoilOrganicC_Percent <- 5
ClayContent <- 0.05
SandContent <- 0.2
RunICBMAndRe(yield = yield,
iag = iag,
ibg = ibg,
iman = iman,
iag_init = 0,
ibg_init = 0,
io_init = 0,
DailyClimateTable = get_climate_data_example,
perennial = perennial,
SoilOrganicC_Percent = SoilOrganicC_Percent,
ClayContent = ClayContent,
SandContent = SandContent,
irrigation_use_estimate = FALSE)
install.packages("tidyverse")
library(ggplot2)
library(knitr)
library(dplyr)
library(geojson)
library(tibble)
library(purrr)
library(stringr)
library(here)
library(lubridate)
library(tidyr)
dir.create(tempdir()) #This fixes a bug if the temporary directory is not found
here::i_am("re_walkthrough.rmd")
source(here::here("re_script.r"))
source(here::here("re_functions.r"))
source(here::here("run_icbm_and_re.r"))
# Import climate data
get_climate_data_example <- getClimateData(
climate_data_folder = "climate_data",
site_name = "244014")
# Import weather data
# This is arbitrary weather data from the lat/long 45/45.
holos_nasa_climate_example <- readr::read_csv(here::here("holos_nasa_climate_example_example.csv")) %>%
filter(Year >= 2000) %>%
rename(Tavg = MeanDailyAirTemperature,
PREC = MeanDailyPrecipitation,
PET = MeanDailyPET)
# These are arbitrary annual C inputs
iag <- rep(977,length(unique(get_climate_data_example$Year))) #aboveground young
ibg <- rep(288,length(unique(get_climate_data_example$Year))) #belowground young
iman <- rep(88,length(unique(get_climate_data_example$Year))) #manure
# This is annual yield for an arbitrary crop type
yield <- 3000
perennial <- FALSE
# These are arbitrary soil parameters;
# not related to an SLC polygon or the location of the climate data
SoilOrganicC_Percent <- 5
ClayContent <- 0.05
SandContent <- 0.2
RunICBMAndRe(yield = yield,
iag = iag,
ibg = ibg,
iman = iman,
iag_init = 0,
ibg_init = 0,
io_init = 0,
DailyClimateTable = get_climate_data_example,
perennial = perennial,
SoilOrganicC_Percent = SoilOrganicC_Percent,
ClayContent = ClayContent,
SandContent = SandContent,
irrigation_use_estimate = FALSE)
