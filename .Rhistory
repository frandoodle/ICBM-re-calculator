group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name, soil_depth_min_cm, soil_depth_max_cm, initial_soc_year) %>%
summarise(across(initial_dataset:soc_tha, mean)) %>%
group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name) %>%
group_split()
bb[[300]]
bb[[200]]
bb[[100]]
bb[[150]]
bb[[120]]
site_data_joined
View(site_data_joined)
z
input
input <- bb[[100]]
z <- input %>%
mutate(soil_depth = paste0(soil_depth_min_cm,"-",soil_depth_max_cm))
one_combination_depths <- NULL
two_combination_depths <- NULL
three_combination_depths <- NULL
one_combination_lowest_depth <- NULL
two_combination_lowest_depth <- NULL
three_combination_lowest_depth <- NULL
if(nrow(z) >= 1) {
one_combination <- combn(z$soil_depth, 1) %>%
t %>%
as_tibble() %>%
rowwise() %>%
mutate(min1 = as.numeric(str_split(V1,"-")[[1]][1]),
max1 = as.numeric(str_split(V1,"-")[[1]][2])) %>%
mutate(min_unique = (any(duplicated(c(min1)))),
max_unique = (any(duplicated(c(max1)))),
lowest_depth = (max1) - (min1)) %>%
filter(!min_unique,
!max_unique) %>%
# Select the depth closest to 30
ungroup() %>%
mutate(lowest_depth_diff = abs(30-lowest_depth)) %>%
filter(lowest_depth_diff == min(lowest_depth_diff))
one_combination_lowest_depth <- one_combination$lowest_depth %>%
unique()
one_combination_depths <- one_combination %>%
select(V1) %>%
unlist
}
if(nrow(z) >= 2) {
two_combination <- combn(z$soil_depth, 2) %>%
t %>%
as_tibble() %>%
rowwise() %>%
mutate(min1 = as.numeric(str_split(V1,"-")[[1]][1]),
max1 = as.numeric(str_split(V1,"-")[[1]][2]),
min2 = as.numeric(str_split(V2,"-")[[1]][1]),
max2 = as.numeric(str_split(V2,"-")[[1]][2])) %>%
mutate(min_unique = (any(duplicated(c(min1, min2)))),
max_unique = (any(duplicated(c(max1, max2)))),
lowest_depth = (max1 + max2) - (min1 + min2)) %>%
filter(!min_unique,
!max_unique) %>%
# Select the depth closest to 30
ungroup() %>%
mutate(lowest_depth_diff = abs(30-lowest_depth)) %>%
filter(lowest_depth_diff == min(lowest_depth_diff))
two_combination_lowest_depth <- two_combination$lowest_depth %>%
unique()
two_combination_depths <- two_combination %>%
select(V1, V2) %>%
unlist
}
if(nrow(z) >= 3) {
three_combination <- combn(z$soil_depth, 3) %>%
t %>%
as_tibble() %>%
rowwise() %>%
mutate(min1 = as.numeric(str_split(V1,"-")[[1]][1]),
max1 = as.numeric(str_split(V1,"-")[[1]][2]),
min2 = as.numeric(str_split(V2,"-")[[1]][1]),
max2 = as.numeric(str_split(V2,"-")[[1]][2]),
min3 = as.numeric(str_split(V3,"-")[[1]][1]),
max3 = as.numeric(str_split(V3,"-")[[1]][2])) %>%
mutate(min_unique = (any(duplicated(c(min1, min2, min3)))),
max_unique = (any(duplicated(c(max1, max2, max3)))),
lowest_depth = (max1 + max2 + max3) - (min1 + min2 + min3)) %>%
filter(!min_unique,
!max_unique) %>%
# Select the depth closest to 30
ungroup() %>%
mutate(lowest_depth_diff = abs(30-lowest_depth)) %>%
filter(lowest_depth_diff == min(lowest_depth_diff))
three_combination_lowest_depth <- three_combination$lowest_depth %>%
unique()
three_combination_depths <- three_combination %>%
select(V1, V2, V3) %>%
unlist
}
one_combination_rows <- z %>%
filter(soil_depth %in% one_combination_depths) %>%
mutate(combination_group = 1,
lowest_depth = one_combination_lowest_depth)
two_combination_rows <- z %>%
filter(soil_depth %in% two_combination_depths) %>%
mutate(combination_group = 2,
lowest_depth = two_combination_lowest_depth)
three_combination_rows <- z %>%
filter(soil_depth %in% three_combination_depths) %>%
mutate(combination_group = 3,
lowest_depth = three_combination_lowest_depth)
result <- bind_rows(one_combination_rows, two_combination_rows, three_combination_rows) %>%
filter(lowest_depth == max(lowest_depth))
result
input
two_combination
one_combination_rows
result
site_data_joined <- site_data_depth_groups %>%
left_join(initialc_dsm, by=c("location_name")) %>%
left_join(initialc_cmods, by="location_name") %>%
select(Exp_ID, location_name, treatment_number,treatment_name, year_name, lowest_depth, soil_depth,
soil_depth_min_cm, soil_depth_max_cm, combination_group,
soc_tha, initial_dataset, initial_dsm, initial_cmods, initial_soc_year) %>%
# Set the initial C to either be 1 year before the first year ever measured for that site, or 1999 (maximum start date).
group_by(Exp_ID, location_name) %>%
mutate(initial_soc_year_dsm = ifelse(min(year_name) < 2000, min(year_name)-1, 1999))
site_data_joined
site_data_depth_ranges <- site_data_joined %>%
filter(soil_depth_max_cm == lowest_depth & soil_depth_min_cm == 0)
site_data_depth_ranges
View(site_data_depth_ranges)
site_data_depth_ranges <- site_data_joined %>%
filter(soil_depth_max_cm == lowest_depth & soil_depth_min_cm == 0) %>%
group_by(Exp_ID, location_name, treatment_number, treatment_name, soil_depth) %>%
mutate(dsm_diff = initial_dsm - first(soc_tha))
View(site_data_depth_ranges)
site_data_depth_ranges <- site_data_joined %>%
group_by(Exp_ID, location_name, treatment_number, treatment_name, soil_depth) %>%
filter(year_name == first(year_name))
View(site_data_depth_ranges)
View(site_data_depth_ranges)
site_data_depth_ranges <- site_data_joined %>%
group_by(Exp_ID, location_name, treatment_number, treatment_name, soil_depth) %>%
filter(year_name == first(year_name)) %>%
filter(soil_depth_min_cm == 0)
View(site_data_depth_ranges)
site_data_depth_ranges <- site_data_joined %>%
group_by(Exp_ID, location_name, treatment_number, treatment_name, soil_depth) %>%
filter(year_name == first(year_name)) %>%
filter(soil_depth_min_cm == 0) %>%
filter(soil_depth_max_cm == lowest_depth)
View(site_data_depth_ranges)
site_data_depth_ranges <- site_data_joined %>%
group_by(Exp_ID, location_name, treatment_number, treatment_name, soil_depth) %>%
filter(year_name == first(year_name)) %>%
filter(soil_depth_min_cm == 0)
View(site_data_depth_ranges)
library(ggplot2)
library(dplyr)
library(here)
library(stringr)
library(tidyr)
dir.create(tempdir()) #This fixes a bug if the temporary directory is not found
here::i_am("qc_initialc.rmd")
source(here("r/make_depth_groups.r"))
site_data_all <- readr::read_csv(here("data/lte_master_beta_dec02.csv")) %>%
mutate(soil_depth = paste0(soil_depth_min_cm,"-",soil_depth_max_cm))
initialc_dsm <- readr::read_csv(here("data/lte_soc_30_cm_dsm.csv")) %>%
mutate(location_name = location_n) %>%
select(location_name, initial_dsm = `Can_SOC30 (Mg ha-1)`) %>%
unique
initialc_cmods <- readr::read_csv(here("data/ExptSiteList.csv")) %>%
select(location_name, initial_cmods = init_soc) %>%
unique
make_depth_groups
site_data_depth_groups <- site_data_all %>%
full_join(initialc_dsm, by=c("location_name")) %>%
full_join(initialc_cmods, by="location_name") %>%
select(Exp_ID, location_name, treatment_number,treatment_name, year_name, replication_number, soil_depth, soil_depth_min_cm, soil_depth_max_cm,
initial_soc_year,
initial_dataset = initial_soc_tha,
soc_tha) %>%
filter(!is.na(soc_tha)) %>%
# Get the mean for field_name, replication_number, and block
group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name, soil_depth_min_cm, soil_depth_max_cm, initial_soc_year) %>%
summarise(across(initial_dataset:soc_tha, mean)) %>%
group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name) %>%
group_split() %>%
purrr::map(~make_depth_groups(.)) %>%
bind_rows
site_data_joined <- site_data_depth_groups %>%
left_join(initialc_dsm, by=c("location_name")) %>%
left_join(initialc_cmods, by="location_name") %>%
select(Exp_ID, location_name, treatment_number,treatment_name, year_name, lowest_depth, soil_depth,
soil_depth_min_cm, soil_depth_max_cm, combination_group,
soc_tha, initial_dataset, initial_dsm, initial_cmods, initial_soc_year) %>%
# Set the initial C to either be 1 year before the first year ever measured for that site, or 1999 (maximum start date).
group_by(Exp_ID, location_name) %>%
mutate(initial_soc_year_dsm = ifelse(min(year_name) < 2000, min(year_name)-1, 1999))
site_data_summed <- site_data_joined %>%
group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name, initial_dataset, initial_dsm, initial_cmods, initial_soc_year, initial_soc_year_dsm, combination_group, lowest_depth) %>%
summarise(soc_tha_lowest_depth = sum(soc_tha)) %>%
# Get mean values for each combination group to remove duplicates
group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name, initial_dataset, initial_dsm, initial_cmods, initial_soc_year, initial_soc_year_dsm, lowest_depth) %>%
summarise(across(c("soc_tha_lowest_depth"), mean))
site_data_corrected <- site_data_summed %>%
group_by(Exp_ID, location_name, treatment_number, treatment_name) %>%
mutate(first_soc_treatment = first(soc_tha_lowest_depth),
soc_dsm_difference = initial_dsm - first_soc_treatment,
lowest_depth_difference = 30 - lowest_depth,
soc_30cm_dynamic = ifelse(lowest_depth_difference != 0,
soc_tha_lowest_depth + soc_dsm_difference,
soc_tha_lowest_depth)) %>%
mutate(soc_30cm_naive = soc_tha_lowest_depth * (30/lowest_depth))
site_data_corrected %>%
select(Exp_ID, location_name, treatment_name, year_name,
initial_dsm,
soc_30cm_naive, soc_30cm_dynamic
) %>%
filter(location_name == "Lethbridge") %>%
filter(!is.na(soc_30cm_naive)) %>%
filter(treatment_name == "Fw-Wt I")
site_data_corrected %>%
select(Exp_ID, location_name, treatment_name, year_name,
initial_dsm,
soc_30cm_naive, soc_30cm_dynamic
) %>%
filter(location_name == "Ellerslie") %>%
filter(!is.na(soc_30cm_naive)) %>%
filter(treatment_name == "F25NS")
site_data_corrected %>%
pivot_longer(c("soc_30cm_naive", "soc_30cm_dynamic"), names_to="soc_method", values_to="soc") %>%
pivot_longer(c("initial_dsm", "initial_cmods"), names_to="initial_method", values_to="initial") %>%
ggplot(aes(x=year_name)) +
geom_point(aes(y=soc, color=soc_method), alpha=0.2) +
geom_point(aes(y=initial, shape=initial_method, x=initial_soc_year_dsm), color="green") +
theme_bw() +
facet_wrap(vars(location_name)) +
labs(x = "Year", y = "SOC (Mg/ha)",
color = "Depth \ncorrection \nmethod", shape = "Initial C \nestimation \nmethod") +
theme(aspect.ratio = 1) +
scale_color_manual(labels = c("Dynamic", "Naive"), values = c("blue", "red")) +
scale_shape_manual(labels = c("CMods", "DSM"), values = c("square", "triangle"))
make_normal_plot <- function(location) {
site_data_corrected %>%
filter(location_name == location) %>%
pivot_longer(c("soc_30cm_naive", "soc_30cm_dynamic"), names_to="soc_method", values_to="soc") %>%
pivot_longer(c("initial_dsm", "initial_cmods"), names_to="initial_method", values_to="initial") %>%
ggplot(aes(x=year_name, y=soc_30cm_naive)) +
geom_point(aes(y=soc, color=soc_method), alpha=0.2) +
geom_point(aes(y=initial, shape=initial_method, x=initial_soc_year_dsm), color="green") +
theme_bw() +
facet_wrap(vars(treatment_name)) +
labs(title = location, x = "Year", y = "SOC (Mg/ha)",
color = "Depth \ncorrection \nmethod", shape = "Initial C \nestimation \nmethod") +
theme(aspect.ratio = 1) +
scale_color_manual(labels = c("Dynamic", "Naive"), values = c("blue", "red")) +
scale_shape_manual(labels = c("CMods", "DSM"), values = c("square", "triangle"))
}
make_normal_plot("Ellerslie")
make_normal_plot("Harrow")
make_normal_plot("Lethbridge")
make_normal_plot("Ottawa")
make_normal_plot("Scott")
make_normal_plot("Swift Current New")
make_normal_plot("Swift Current Old")
library(ggplot2)
library(dplyr)
library(here)
library(stringr)
library(tidyr)
dir.create(tempdir()) #This fixes a bug if the temporary directory is not found
here::i_am("qc_initialc.rmd")
source(here("r/make_depth_groups.r"))
site_data_all <- readr::read_csv(here("data/lte_master_beta_dec02.csv")) %>%
mutate(soil_depth = paste0(soil_depth_min_cm,"-",soil_depth_max_cm))
initialc_dsm <- readr::read_csv(here("data/lte_soc_30_cm_dsm.csv")) %>%
mutate(location_name = location_n) %>%
select(location_name, initial_dsm = `Can_SOC30 (Mg ha-1)`) %>%
unique
initialc_cmods <- readr::read_csv(here("data/ExptSiteList.csv")) %>%
select(location_name, initial_cmods = init_soc) %>%
unique
make_depth_groups
site_data_depth_groups <- site_data_all %>%
full_join(initialc_dsm, by=c("location_name")) %>%
full_join(initialc_cmods, by="location_name") %>%
select(Exp_ID, location_name, treatment_number,treatment_name, year_name, replication_number, soil_depth, soil_depth_min_cm, soil_depth_max_cm,
initial_soc_year,
initial_dataset = initial_soc_tha,
soc_tha) %>%
filter(!is.na(soc_tha)) %>%
# Get the mean for field_name, replication_number, and block
group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name, soil_depth_min_cm, soil_depth_max_cm, initial_soc_year) %>%
summarise(across(initial_dataset:soc_tha, mean)) %>%
group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name) %>%
group_split() %>%
purrr::map(~make_depth_groups(.)) %>%
bind_rows
site_data_joined <- site_data_depth_groups %>%
left_join(initialc_dsm, by=c("location_name")) %>%
left_join(initialc_cmods, by="location_name") %>%
select(Exp_ID, location_name, treatment_number,treatment_name, year_name, lowest_depth, soil_depth,
soil_depth_min_cm, soil_depth_max_cm, combination_group,
soc_tha, initial_dataset, initial_dsm, initial_cmods, initial_soc_year) %>%
# Set the initial C to either be 1 year before the first year ever measured for that site, or 1999 (maximum start date).
group_by(Exp_ID, location_name) %>%
mutate(initial_soc_year_dsm = ifelse(min(year_name) < 2000, min(year_name)-1, 1999))
site_data_summed <- site_data_joined %>%
group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name, initial_dataset, initial_dsm, initial_cmods, initial_soc_year, initial_soc_year_dsm, combination_group, lowest_depth) %>%
summarise(soc_tha_lowest_depth = sum(soc_tha)) %>%
# Get mean values for each combination group to remove duplicates
group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name, initial_dataset, initial_dsm, initial_cmods, initial_soc_year, initial_soc_year_dsm, lowest_depth) %>%
summarise(across(c("soc_tha_lowest_depth"), mean))
site_data_corrected <- site_data_summed %>%
group_by(Exp_ID, location_name, treatment_number, treatment_name) %>%
mutate(first_soc_treatment = first(soc_tha_lowest_depth),
soc_dsm_difference = initial_dsm - first_soc_treatment,
lowest_depth_difference = 30 - lowest_depth,
soc_30cm_dynamic = ifelse(lowest_depth_difference != 0,
soc_tha_lowest_depth + soc_dsm_difference,
soc_tha_lowest_depth)) %>%
mutate(soc_30cm_naive = soc_tha_lowest_depth * (30/lowest_depth))
site_data_corrected %>%
select(Exp_ID, location_name, treatment_name, year_name,
initial_dsm,
soc_30cm_naive, soc_30cm_dynamic
) %>%
filter(location_name == "Lethbridge") %>%
filter(!is.na(soc_30cm_naive)) %>%
filter(treatment_name == "Fw-Wt I")
site_data_corrected %>%
select(Exp_ID, location_name, treatment_name, year_name,
initial_dsm,
soc_30cm_naive, soc_30cm_dynamic
) %>%
filter(location_name == "Ellerslie") %>%
filter(!is.na(soc_30cm_naive)) %>%
filter(treatment_name == "F25NS")
site_data_corrected %>%
pivot_longer(c("soc_30cm_naive", "soc_30cm_dynamic"), names_to="soc_method", values_to="soc") %>%
pivot_longer(c("initial_dsm", "initial_cmods"), names_to="initial_method", values_to="initial") %>%
ggplot(aes(x=year_name)) +
geom_point(aes(y=soc, color=soc_method), alpha=0.2) +
geom_point(aes(y=initial, shape=initial_method, x=initial_soc_year_dsm), color="green") +
theme_bw() +
facet_wrap(vars(location_name)) +
labs(x = "Year", y = "SOC (Mg/ha)",
color = "Depth \ncorrection \nmethod", shape = "Initial C \nestimation \nmethod") +
theme(aspect.ratio = 1) +
scale_color_manual(labels = c("Dynamic", "Naive"), values = c("blue", "red")) +
scale_shape_manual(labels = c("CMods", "DSM"), values = c("square", "triangle"))
make_normal_plot <- function(location) {
site_data_corrected %>%
filter(location_name == location) %>%
pivot_longer(c("soc_30cm_naive", "soc_30cm_dynamic"), names_to="soc_method", values_to="soc") %>%
pivot_longer(c("initial_dsm", "initial_cmods"), names_to="initial_method", values_to="initial") %>%
ggplot(aes(x=year_name, y=soc_30cm_naive)) +
geom_point(aes(y=soc, color=soc_method), alpha=0.2) +
geom_point(aes(y=initial, shape=initial_method, x=initial_soc_year_dsm), color="green") +
theme_bw() +
facet_wrap(vars(treatment_name)) +
labs(title = location, x = "Year", y = "SOC (Mg/ha)",
color = "Depth \ncorrection \nmethod", shape = "Initial C \nestimation \nmethod") +
theme(aspect.ratio = 1) +
scale_color_manual(labels = c("Dynamic", "Naive"), values = c("blue", "red")) +
scale_shape_manual(labels = c("CMods", "DSM"), values = c("square", "triangle"))
}
make_normal_plot("Ellerslie")
make_normal_plot("Harrow")
make_normal_plot("Indian Head")
make_normal_plot("Lethbridge")
make_normal_plot("Ottawa")
make_normal_plot("Scott")
make_normal_plot("Swift Current New")
make_normal_plot("Swift Current Old")
site_data_corrected %>%
select(Exp_ID, location_name, treatment_name, year_name,
initial_dsm,
soc_30cm_naive, soc_30cm_dynamic
) %>%
filter(location_name == "Ellerslie") %>%
filter(!is.na(soc_30cm_naive)) %>%
filter(treatment_name == "F25NS")
131.9	- 123.3200
123.3200 + 8.58
site_data_corrected %>%
select(Exp_ID, location_name, treatment_name, year_name,
initial_dsm, soc_tha,
soc_30cm_naive, soc_30cm_dynamic
) %>%
filter(location_name == "Ellerslie") %>%
filter(!is.na(soc_30cm_naive)) %>%
filter(treatment_name == "F25NS")
site_data_corrected
site_data_corrected$soc_tha_lowest_depth
site_data_corrected %>%
select(Exp_ID, location_name, treatment_name, year_name,
initial_dsm, soc_tha_lowest_depth,
soc_30cm_naive, soc_30cm_dynamic
) %>%
filter(location_name == "Ellerslie") %>%
filter(!is.na(soc_30cm_naive)) %>%
filter(treatment_name == "F25NS")
131.9	- 110.21 = 8.58
131.9	- 110.21
123.3200 + 21.69
library(ggplot2)
library(dplyr)
library(here)
library(stringr)
library(tidyr)
dir.create(tempdir()) #This fixes a bug if the temporary directory is not found
here::i_am("qc_initialc.rmd")
source(here("r/make_depth_groups.r"))
site_data_all <- readr::read_csv(here("data/lte_master_beta_dec02.csv")) %>%
mutate(soil_depth = paste0(soil_depth_min_cm,"-",soil_depth_max_cm))
initialc_dsm <- readr::read_csv(here("data/lte_soc_30_cm_dsm.csv")) %>%
mutate(location_name = location_n) %>%
select(location_name, initial_dsm = `Can_SOC30 (Mg ha-1)`) %>%
unique
initialc_cmods <- readr::read_csv(here("data/ExptSiteList.csv")) %>%
select(location_name, initial_cmods = init_soc) %>%
unique
site_data_depth_groups <- site_data_all %>%
full_join(initialc_dsm, by=c("location_name")) %>%
full_join(initialc_cmods, by="location_name") %>%
select(Exp_ID, location_name, treatment_number,treatment_name, year_name, replication_number, soil_depth, soil_depth_min_cm, soil_depth_max_cm,
initial_soc_year,
initial_dataset = initial_soc_tha,
soc_tha) %>%
filter(!is.na(soc_tha)) %>%
# Get the mean for field_name, replication_number, and block
group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name, soil_depth_min_cm, soil_depth_max_cm, initial_soc_year) %>%
summarise(across(initial_dataset:soc_tha, mean)) %>%
group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name) %>%
group_split() %>%
purrr::map(~make_depth_groups(.)) %>%
bind_rows
site_data_joined <- site_data_depth_groups %>%
left_join(initialc_dsm, by=c("location_name")) %>%
left_join(initialc_cmods, by="location_name") %>%
select(Exp_ID, location_name, treatment_number,treatment_name, year_name, lowest_depth, soil_depth,
soil_depth_min_cm, soil_depth_max_cm, combination_group,
soc_tha, initial_dataset, initial_dsm, initial_cmods, initial_soc_year) %>%
# Set the initial C to either be 1 year before the first year ever measured for that site, or 1999 (maximum start date).
group_by(Exp_ID, location_name) %>%
mutate(initial_soc_year_dsm = ifelse(min(year_name) < 2000, min(year_name)-1, 1999))
site_data_summed <- site_data_joined %>%
group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name, initial_dataset, initial_dsm, initial_cmods, initial_soc_year, initial_soc_year_dsm, combination_group, lowest_depth) %>%
summarise(soc_tha_lowest_depth = sum(soc_tha)) %>%
# Get mean values for each combination group to remove duplicates
group_by(Exp_ID, location_name, year_name, treatment_number, treatment_name, initial_dataset, initial_dsm, initial_cmods, initial_soc_year, initial_soc_year_dsm, lowest_depth) %>%
summarise(across(c("soc_tha_lowest_depth"), mean))
site_data_corrected <- site_data_summed %>%
group_by(Exp_ID, location_name, treatment_number, treatment_name) %>%
mutate(first_soc_treatment = first(soc_tha_lowest_depth),
soc_dsm_difference = initial_dsm - first_soc_treatment,
lowest_depth_difference = 30 - lowest_depth,
soc_30cm_dynamic = ifelse(lowest_depth_difference != 0,
soc_tha_lowest_depth + soc_dsm_difference,
soc_tha_lowest_depth)) %>%
mutate(soc_30cm_naive = soc_tha_lowest_depth * (30/lowest_depth))
site_data_corrected %>%
select(Exp_ID, location_name, treatment_name, year_name,
initial_dsm,
soc_30cm_naive, soc_30cm_dynamic
) %>%
filter(location_name == "Lethbridge") %>%
filter(!is.na(soc_30cm_naive)) %>%
filter(treatment_name == "Fw-Wt I")
site_data_corrected %>%
select(Exp_ID, location_name, treatment_name, year_name,
initial_dsm, soc_tha_lowest_depth,
soc_30cm_naive, soc_30cm_dynamic
) %>%
filter(location_name == "Ellerslie") %>%
filter(!is.na(soc_30cm_naive)) %>%
filter(treatment_name == "F25NS")
site_data_corrected %>%
pivot_longer(c("soc_30cm_naive", "soc_30cm_dynamic"), names_to="soc_method", values_to="soc") %>%
pivot_longer(c("initial_dsm", "initial_cmods"), names_to="initial_method", values_to="initial") %>%
ggplot(aes(x=year_name)) +
geom_point(aes(y=soc, color=soc_method), alpha=0.2) +
geom_point(aes(y=initial, shape=initial_method, x=initial_soc_year_dsm), color="green") +
theme_bw() +
facet_wrap(vars(location_name)) +
labs(x = "Year", y = "SOC (Mg/ha)",
color = "Depth \ncorrection \nmethod", shape = "Initial C \nestimation \nmethod") +
theme(aspect.ratio = 1) +
scale_color_manual(labels = c("Dynamic", "Naive"), values = c("blue", "red")) +
scale_shape_manual(labels = c("CMods", "DSM"), values = c("square", "triangle"))
make_normal_plot <- function(location) {
site_data_corrected %>%
filter(location_name == location) %>%
pivot_longer(c("soc_30cm_naive", "soc_30cm_dynamic"), names_to="soc_method", values_to="soc") %>%
pivot_longer(c("initial_dsm", "initial_cmods"), names_to="initial_method", values_to="initial") %>%
ggplot(aes(x=year_name, y=soc_30cm_naive)) +
geom_point(aes(y=soc, color=soc_method), alpha=0.2) +
geom_point(aes(y=initial, shape=initial_method, x=initial_soc_year_dsm), color="green") +
theme_bw() +
facet_wrap(vars(treatment_name)) +
labs(title = location, x = "Year", y = "SOC (Mg/ha)",
color = "Depth \ncorrection \nmethod", shape = "Initial C \nestimation \nmethod") +
theme(aspect.ratio = 1) +
scale_color_manual(labels = c("Dynamic", "Naive"), values = c("blue", "red")) +
scale_shape_manual(labels = c("CMods", "DSM"), values = c("square", "triangle"))
}
make_normal_plot("Ellerslie")
make_normal_plot("Harrow")
make_normal_plot("Indian Head")
make_normal_plot("Lethbridge")
make_normal_plot("Ottawa")
make_normal_plot("Scott")
make_normal_plot("Swift Current New")
make_normal_plot("Swift Current Old")
